// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement()) //ユーザーのID
  name String @unique //ユーザーネーム（重複は無いようにunique、ログイン時に使用、サインアップ時に登録してもらう）
  password String //パスワード（ログイン時に使用、サインアップ時に登録してもらう）
  number_book Int @default(0)//各ユーザーのそれぞれの本の読んだ冊数

  books Userbooks[]//各ユーザーの読んだ本の情報
  wantbooks Wantreadbooks[]//各ユーザーの気になる本
}

model Book {
  id Int @id @default(autoincrement())//本のID（誰かに検索されて、wantかfinishに登録された際に本のデータ作成が発生）
  title String// 本のタイトル
  author String//本の著者
  picture_url String//本の画像
  overall_rate Float//全期間の評価の平均
  yearly_rate Float//年間のレート（年が変わるとクリーン、０となる）
  monthly_rate Float//月間のレート（月が替わるとクリーン、０となる）
  read_count Int//全期間で読まれた数
  yearly_count Int//年間の読まれた数
  monthly_count Int//月間の読まれた数

  users Userbooks[]
}

model Userbooks {
  id Int @id @default(autoincrement())//主キー
  user User @relation(fields: [user_id], references: [id])
  user_id Int //あるユーザーに関してのデータ

  book Book @relation(fields: [book_id], references: [id])
  book_id Int//ある本に関してのデータ

  user_rate Int//１ユーザーのつけた評価
  finish Boolean//本を読み終えたかどうか
  favorite Boolean//お気に入り
  finish_date DateTime? //読み終わった日付（全ユーザーのfinishから全期間、年間、月間のランキングをつける際に利用する）
}

model Wantreadbooks {
  id Int @id @default(autoincrement())//主キー
  user User @relation(fields: [user_id], references: [id])
  user_id Int//あるユーザーに関してのデータ
  

  title String// 本のタイトル
  author String//本の著者
  picture_url String//本の画像
}